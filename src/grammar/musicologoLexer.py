# Generated from musicologo.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,26,378,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,1,
        0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,
        4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,80,8,4,1,5,1,5,1,5,1,5,
        1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,3,5,98,8,5,1,6,1,
        6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,
        6,1,6,3,6,119,8,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,
        8,1,8,1,8,1,8,3,8,136,8,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,3,9,153,8,9,1,10,1,10,1,10,1,10,1,10,1,10,
        1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,3,10,170,8,10,1,11,
        1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
        1,11,1,11,3,11,188,8,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,
        1,12,1,12,1,12,1,12,1,12,3,12,203,8,12,1,13,1,13,1,13,1,13,1,13,
        1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,3,13,221,
        8,13,1,14,1,14,1,14,1,14,3,14,227,8,14,1,15,1,15,1,15,1,15,1,15,
        1,15,1,15,1,15,1,15,1,15,1,15,1,15,3,15,241,8,15,1,16,1,16,1,16,
        1,16,1,16,1,16,1,16,1,16,3,16,251,8,16,1,17,1,17,1,17,1,17,1,17,
        1,17,1,17,1,17,1,17,3,17,262,8,17,1,18,1,18,1,18,1,18,1,18,1,18,
        1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
        1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,3,18,
        295,8,18,1,19,3,19,298,8,19,1,19,4,19,301,8,19,11,19,12,19,302,1,
        19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,3,19,313,8,19,1,20,4,20,316,
        8,20,11,20,12,20,317,1,20,1,20,1,20,1,20,1,20,4,20,325,8,20,11,20,
        12,20,326,3,20,329,8,20,1,21,1,21,5,21,333,8,21,10,21,12,21,336,
        9,21,1,22,4,22,339,8,22,11,22,12,22,340,1,22,4,22,344,8,22,11,22,
        12,22,345,1,23,4,23,349,8,23,11,23,12,23,350,1,23,1,23,4,23,355,
        8,23,11,23,12,23,356,1,23,1,23,4,23,361,8,23,11,23,12,23,362,3,23,
        365,8,23,1,24,4,24,368,8,24,11,24,12,24,369,1,25,4,25,373,8,25,11,
        25,12,25,374,1,25,1,25,0,0,26,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
        17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,
        39,20,41,21,43,22,45,23,47,24,49,25,51,26,1,0,5,2,0,60,60,62,62,
        1,0,48,57,3,0,48,57,65,90,97,122,2,0,65,90,97,122,3,0,9,10,13,13,
        32,32,425,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
        0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
        0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
        0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
        0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
        0,0,0,0,51,1,0,0,0,1,53,1,0,0,0,3,55,1,0,0,0,5,57,1,0,0,0,7,62,1,
        0,0,0,9,79,1,0,0,0,11,97,1,0,0,0,13,118,1,0,0,0,15,120,1,0,0,0,17,
        135,1,0,0,0,19,152,1,0,0,0,21,169,1,0,0,0,23,187,1,0,0,0,25,202,
        1,0,0,0,27,220,1,0,0,0,29,226,1,0,0,0,31,240,1,0,0,0,33,250,1,0,
        0,0,35,261,1,0,0,0,37,294,1,0,0,0,39,297,1,0,0,0,41,315,1,0,0,0,
        43,330,1,0,0,0,45,343,1,0,0,0,47,348,1,0,0,0,49,367,1,0,0,0,51,372,
        1,0,0,0,53,54,5,32,0,0,54,2,1,0,0,0,55,56,5,123,0,0,56,4,1,0,0,0,
        57,58,5,32,0,0,58,59,5,38,0,0,59,60,5,38,0,0,60,61,5,32,0,0,61,6,
        1,0,0,0,62,63,5,125,0,0,63,8,1,0,0,0,64,65,5,99,0,0,65,66,5,97,0,
        0,66,67,5,114,0,0,67,68,5,103,0,0,68,69,5,97,0,0,69,80,5,114,0,0,
        70,71,5,108,0,0,71,72,5,111,0,0,72,73,5,97,0,0,73,80,5,100,0,0,74,
        75,5,99,0,0,75,76,5,114,0,0,76,80,5,103,0,0,77,78,5,108,0,0,78,80,
        5,100,0,0,79,64,1,0,0,0,79,70,1,0,0,0,79,74,1,0,0,0,79,77,1,0,0,
        0,80,10,1,0,0,0,81,82,5,114,0,0,82,83,5,101,0,0,83,84,5,99,0,0,84,
        85,5,111,0,0,85,86,5,114,0,0,86,87,5,116,0,0,87,88,5,97,0,0,88,98,
        5,114,0,0,89,90,5,99,0,0,90,91,5,117,0,0,91,98,5,116,0,0,92,93,5,
        114,0,0,93,94,5,99,0,0,94,98,5,116,0,0,95,96,5,99,0,0,96,98,5,116,
        0,0,97,81,1,0,0,0,97,89,1,0,0,0,97,92,1,0,0,0,97,95,1,0,0,0,98,12,
        1,0,0,0,99,100,5,101,0,0,100,101,5,120,0,0,101,102,5,112,0,0,102,
        103,5,111,0,0,103,104,5,114,0,0,104,105,5,116,0,0,105,106,5,97,0,
        0,106,119,5,114,0,0,107,108,5,101,0,0,108,109,5,120,0,0,109,110,
        5,112,0,0,110,111,5,111,0,0,111,112,5,114,0,0,112,119,5,116,0,0,
        113,114,5,101,0,0,114,115,5,120,0,0,115,119,5,112,0,0,116,117,5,
        101,0,0,117,119,5,120,0,0,118,99,1,0,0,0,118,107,1,0,0,0,118,113,
        1,0,0,0,118,116,1,0,0,0,119,14,1,0,0,0,120,121,5,115,0,0,121,122,
        5,117,0,0,122,123,5,98,0,0,123,124,5,105,0,0,124,125,5,114,0,0,125,
        126,5,86,0,0,126,127,5,111,0,0,127,128,5,108,0,0,128,16,1,0,0,0,
        129,130,5,99,0,0,130,131,5,111,0,0,131,132,5,109,0,0,132,136,5,111,
        0,0,133,134,5,97,0,0,134,136,5,115,0,0,135,129,1,0,0,0,135,133,1,
        0,0,0,136,18,1,0,0,0,137,138,5,100,0,0,138,139,5,105,0,0,139,140,
        5,118,0,0,140,141,5,105,0,0,141,142,5,100,0,0,142,143,5,105,0,0,
        143,153,5,114,0,0,144,145,5,115,0,0,145,146,5,112,0,0,146,147,5,
        108,0,0,147,148,5,105,0,0,148,153,5,116,0,0,149,150,5,100,0,0,150,
        151,5,105,0,0,151,153,5,118,0,0,152,137,1,0,0,0,152,144,1,0,0,0,
        152,149,1,0,0,0,153,20,1,0,0,0,154,155,5,99,0,0,155,156,5,111,0,
        0,156,157,5,109,0,0,157,158,5,98,0,0,158,159,5,105,0,0,159,160,5,
        110,0,0,160,161,5,97,0,0,161,170,5,114,0,0,162,163,5,109,0,0,163,
        164,5,105,0,0,164,170,5,120,0,0,165,166,5,99,0,0,166,167,5,111,0,
        0,167,168,5,109,0,0,168,170,5,98,0,0,169,154,1,0,0,0,169,162,1,0,
        0,0,169,165,1,0,0,0,170,22,1,0,0,0,171,172,5,115,0,0,172,173,5,105,
        0,0,173,174,5,108,0,0,174,175,5,101,0,0,175,176,5,110,0,0,176,177,
        5,99,0,0,177,178,5,105,0,0,178,179,5,97,0,0,179,188,5,114,0,0,180,
        181,5,109,0,0,181,182,5,117,0,0,182,183,5,116,0,0,183,188,5,101,
        0,0,184,185,5,115,0,0,185,186,5,105,0,0,186,188,5,108,0,0,187,171,
        1,0,0,0,187,180,1,0,0,0,187,184,1,0,0,0,188,24,1,0,0,0,189,190,5,
        114,0,0,190,191,5,101,0,0,191,192,5,112,0,0,192,193,5,101,0,0,193,
        194,5,116,0,0,194,195,5,105,0,0,195,203,5,114,0,0,196,197,5,114,
        0,0,197,198,5,101,0,0,198,199,5,112,0,0,199,200,5,101,0,0,200,201,
        5,97,0,0,201,203,5,116,0,0,202,189,1,0,0,0,202,196,1,0,0,0,203,26,
        1,0,0,0,204,205,5,99,0,0,205,206,5,111,0,0,206,207,5,110,0,0,207,
        208,5,99,0,0,208,209,5,97,0,0,209,210,5,116,0,0,210,211,5,101,0,
        0,211,212,5,110,0,0,212,213,5,97,0,0,213,221,5,114,0,0,214,215,5,
        99,0,0,215,216,5,111,0,0,216,217,5,110,0,0,217,218,5,99,0,0,218,
        219,5,97,0,0,219,221,5,116,0,0,220,204,1,0,0,0,220,214,1,0,0,0,221,
        28,1,0,0,0,222,223,5,115,0,0,223,227,5,105,0,0,224,225,5,105,0,0,
        225,227,5,102,0,0,226,222,1,0,0,0,226,224,1,0,0,0,227,30,1,0,0,0,
        228,229,5,101,0,0,229,230,5,110,0,0,230,231,5,116,0,0,231,232,5,
        111,0,0,232,233,5,110,0,0,233,234,5,99,0,0,234,235,5,101,0,0,235,
        241,5,115,0,0,236,237,5,116,0,0,237,238,5,104,0,0,238,239,5,101,
        0,0,239,241,5,110,0,0,240,228,1,0,0,0,240,236,1,0,0,0,241,32,1,0,
        0,0,242,243,5,115,0,0,243,244,5,105,0,0,244,245,5,110,0,0,245,251,
        5,111,0,0,246,247,5,101,0,0,247,248,5,108,0,0,248,249,5,115,0,0,
        249,251,5,101,0,0,250,242,1,0,0,0,250,246,1,0,0,0,251,34,1,0,0,0,
        252,262,7,0,0,0,253,254,5,62,0,0,254,262,5,61,0,0,255,256,5,60,0,
        0,256,262,5,61,0,0,257,258,5,61,0,0,258,262,5,61,0,0,259,260,5,33,
        0,0,260,262,5,61,0,0,261,252,1,0,0,0,261,253,1,0,0,0,261,255,1,0,
        0,0,261,257,1,0,0,0,261,259,1,0,0,0,262,36,1,0,0,0,263,264,5,100,
        0,0,264,265,5,117,0,0,265,266,5,114,0,0,266,267,5,97,0,0,267,268,
        5,99,0,0,268,269,5,105,0,0,269,270,5,243,0,0,270,295,5,110,0,0,271,
        272,5,100,0,0,272,273,5,117,0,0,273,274,5,114,0,0,274,275,5,97,0,
        0,275,276,5,99,0,0,276,277,5,105,0,0,277,278,5,111,0,0,278,295,5,
        110,0,0,279,280,5,100,0,0,280,281,5,117,0,0,281,295,5,114,0,0,282,
        295,5,100,0,0,283,284,5,118,0,0,284,285,5,111,0,0,285,286,5,108,
        0,0,286,287,5,117,0,0,287,288,5,109,0,0,288,289,5,101,0,0,289,295,
        5,110,0,0,290,291,5,118,0,0,291,292,5,111,0,0,292,295,5,108,0,0,
        293,295,5,118,0,0,294,263,1,0,0,0,294,271,1,0,0,0,294,279,1,0,0,
        0,294,282,1,0,0,0,294,283,1,0,0,0,294,290,1,0,0,0,294,293,1,0,0,
        0,295,38,1,0,0,0,296,298,5,45,0,0,297,296,1,0,0,0,297,298,1,0,0,
        0,298,300,1,0,0,0,299,301,7,1,0,0,300,299,1,0,0,0,301,302,1,0,0,
        0,302,300,1,0,0,0,302,303,1,0,0,0,303,312,1,0,0,0,304,305,5,100,
        0,0,305,313,5,66,0,0,306,307,5,100,0,0,307,313,5,98,0,0,308,309,
        5,68,0,0,309,313,5,66,0,0,310,311,5,68,0,0,311,313,5,98,0,0,312,
        304,1,0,0,0,312,306,1,0,0,0,312,308,1,0,0,0,312,310,1,0,0,0,313,
        40,1,0,0,0,314,316,7,2,0,0,315,314,1,0,0,0,316,317,1,0,0,0,317,315,
        1,0,0,0,317,318,1,0,0,0,318,319,1,0,0,0,319,328,5,46,0,0,320,321,
        5,109,0,0,321,322,5,112,0,0,322,329,5,51,0,0,323,325,7,2,0,0,324,
        323,1,0,0,0,325,326,1,0,0,0,326,324,1,0,0,0,326,327,1,0,0,0,327,
        329,1,0,0,0,328,320,1,0,0,0,328,324,1,0,0,0,329,42,1,0,0,0,330,334,
        7,3,0,0,331,333,7,2,0,0,332,331,1,0,0,0,333,336,1,0,0,0,334,332,
        1,0,0,0,334,335,1,0,0,0,335,44,1,0,0,0,336,334,1,0,0,0,337,339,7,
        2,0,0,338,337,1,0,0,0,339,340,1,0,0,0,340,338,1,0,0,0,340,341,1,
        0,0,0,341,342,1,0,0,0,342,344,5,47,0,0,343,338,1,0,0,0,344,345,1,
        0,0,0,345,343,1,0,0,0,345,346,1,0,0,0,346,46,1,0,0,0,347,349,7,1,
        0,0,348,347,1,0,0,0,349,350,1,0,0,0,350,348,1,0,0,0,350,351,1,0,
        0,0,351,352,1,0,0,0,352,354,5,58,0,0,353,355,7,1,0,0,354,353,1,0,
        0,0,355,356,1,0,0,0,356,354,1,0,0,0,356,357,1,0,0,0,357,364,1,0,
        0,0,358,360,5,58,0,0,359,361,7,1,0,0,360,359,1,0,0,0,361,362,1,0,
        0,0,362,360,1,0,0,0,362,363,1,0,0,0,363,365,1,0,0,0,364,358,1,0,
        0,0,364,365,1,0,0,0,365,48,1,0,0,0,366,368,7,1,0,0,367,366,1,0,0,
        0,368,369,1,0,0,0,369,367,1,0,0,0,369,370,1,0,0,0,370,50,1,0,0,0,
        371,373,7,4,0,0,372,371,1,0,0,0,373,374,1,0,0,0,374,372,1,0,0,0,
        374,375,1,0,0,0,375,376,1,0,0,0,376,377,6,25,0,0,377,52,1,0,0,0,
        30,0,79,97,118,135,152,169,187,202,220,226,240,250,261,294,297,302,
        312,317,326,328,334,340,345,350,356,362,364,369,374,1,6,0,0
    ]

class musicologoLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    COMANDO_CARGAR = 5
    COMANDO_RECORTAR = 6
    COMANDO_EXPORTAR = 7
    COMANDO_INCREMENTAR_VOL = 8
    COMANDO_ASIGNAR = 9
    COMANDO_DIVIDIR = 10
    COMANDO_COMBINAR = 11
    COMANDO_SILENCIAR = 12
    COMANDO_REPETIR = 13
    COMANDO_CONCATENAR = 14
    CONDICIONAL = 15
    HACER = 16
    ELSE = 17
    OPERADOR = 18
    CARACTERISTICA = 19
    VOLUMEN = 20
    ARCHIVO_MP3 = 21
    ID = 22
    RUTA = 23
    TIEMPO = 24
    NUMERO = 25
    WS = 26

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "' '", "'{'", "' && '", "'}'", "'subirVol'" ]

    symbolicNames = [ "<INVALID>",
            "COMANDO_CARGAR", "COMANDO_RECORTAR", "COMANDO_EXPORTAR", "COMANDO_INCREMENTAR_VOL", 
            "COMANDO_ASIGNAR", "COMANDO_DIVIDIR", "COMANDO_COMBINAR", "COMANDO_SILENCIAR", 
            "COMANDO_REPETIR", "COMANDO_CONCATENAR", "CONDICIONAL", "HACER", 
            "ELSE", "OPERADOR", "CARACTERISTICA", "VOLUMEN", "ARCHIVO_MP3", 
            "ID", "RUTA", "TIEMPO", "NUMERO", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "COMANDO_CARGAR", "COMANDO_RECORTAR", 
                  "COMANDO_EXPORTAR", "COMANDO_INCREMENTAR_VOL", "COMANDO_ASIGNAR", 
                  "COMANDO_DIVIDIR", "COMANDO_COMBINAR", "COMANDO_SILENCIAR", 
                  "COMANDO_REPETIR", "COMANDO_CONCATENAR", "CONDICIONAL", 
                  "HACER", "ELSE", "OPERADOR", "CARACTERISTICA", "VOLUMEN", 
                  "ARCHIVO_MP3", "ID", "RUTA", "TIEMPO", "NUMERO", "WS" ]

    grammarFileName = "musicologo.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


