# Generated from musicologo.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,23,326,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,
        1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,
        1,4,1,4,3,4,74,8,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,
        5,1,5,1,5,1,5,1,5,3,5,92,8,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,3,6,113,8,6,1,7,1,7,1,7,
        1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,3,8,130,8,8,1,9,
        1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,147,
        8,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
        1,10,1,10,1,10,3,10,164,8,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
        1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,3,11,182,8,11,1,12,
        1,12,1,12,1,12,3,12,188,8,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,
        1,13,1,13,1,13,1,13,1,13,3,13,202,8,13,1,14,1,14,1,14,1,14,1,14,
        1,14,1,14,1,14,3,14,212,8,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,
        1,15,1,15,3,15,223,8,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
        1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
        1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,3,16,256,8,16,
        1,17,3,17,259,8,17,1,17,4,17,262,8,17,11,17,12,17,263,1,17,1,17,
        1,17,1,17,1,17,1,17,1,17,1,17,3,17,274,8,17,1,18,4,18,277,8,18,11,
        18,12,18,278,1,18,1,18,1,18,1,18,1,18,1,19,4,19,287,8,19,11,19,12,
        19,288,1,20,4,20,292,8,20,11,20,12,20,293,1,20,4,20,297,8,20,11,
        20,12,20,298,1,21,4,21,302,8,21,11,21,12,21,303,1,21,1,21,4,21,308,
        8,21,11,21,12,21,309,1,21,1,21,4,21,314,8,21,11,21,12,21,315,3,21,
        318,8,21,1,22,4,22,321,8,22,11,22,12,22,322,1,22,1,22,0,0,23,1,1,
        3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
        29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,1,0,4,2,0,
        60,60,62,62,1,0,48,57,3,0,48,57,65,90,97,122,3,0,9,10,13,13,32,32,
        368,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
        0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
        0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,
        0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,
        0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,1,47,1,0,0,0,3,49,1,0,0,0,
        5,51,1,0,0,0,7,56,1,0,0,0,9,73,1,0,0,0,11,91,1,0,0,0,13,112,1,0,
        0,0,15,114,1,0,0,0,17,129,1,0,0,0,19,146,1,0,0,0,21,163,1,0,0,0,
        23,181,1,0,0,0,25,187,1,0,0,0,27,201,1,0,0,0,29,211,1,0,0,0,31,222,
        1,0,0,0,33,255,1,0,0,0,35,258,1,0,0,0,37,276,1,0,0,0,39,286,1,0,
        0,0,41,296,1,0,0,0,43,301,1,0,0,0,45,320,1,0,0,0,47,48,5,32,0,0,
        48,2,1,0,0,0,49,50,5,123,0,0,50,4,1,0,0,0,51,52,5,32,0,0,52,53,5,
        38,0,0,53,54,5,38,0,0,54,55,5,32,0,0,55,6,1,0,0,0,56,57,5,125,0,
        0,57,8,1,0,0,0,58,59,5,99,0,0,59,60,5,97,0,0,60,61,5,114,0,0,61,
        62,5,103,0,0,62,63,5,97,0,0,63,74,5,114,0,0,64,65,5,108,0,0,65,66,
        5,111,0,0,66,67,5,97,0,0,67,74,5,100,0,0,68,69,5,99,0,0,69,70,5,
        114,0,0,70,74,5,103,0,0,71,72,5,108,0,0,72,74,5,100,0,0,73,58,1,
        0,0,0,73,64,1,0,0,0,73,68,1,0,0,0,73,71,1,0,0,0,74,10,1,0,0,0,75,
        76,5,114,0,0,76,77,5,101,0,0,77,78,5,99,0,0,78,79,5,111,0,0,79,80,
        5,114,0,0,80,81,5,116,0,0,81,82,5,97,0,0,82,92,5,114,0,0,83,84,5,
        99,0,0,84,85,5,117,0,0,85,92,5,116,0,0,86,87,5,114,0,0,87,88,5,99,
        0,0,88,92,5,116,0,0,89,90,5,99,0,0,90,92,5,116,0,0,91,75,1,0,0,0,
        91,83,1,0,0,0,91,86,1,0,0,0,91,89,1,0,0,0,92,12,1,0,0,0,93,94,5,
        101,0,0,94,95,5,120,0,0,95,96,5,112,0,0,96,97,5,111,0,0,97,98,5,
        114,0,0,98,99,5,116,0,0,99,100,5,97,0,0,100,113,5,114,0,0,101,102,
        5,101,0,0,102,103,5,120,0,0,103,104,5,112,0,0,104,105,5,111,0,0,
        105,106,5,114,0,0,106,113,5,116,0,0,107,108,5,101,0,0,108,109,5,
        120,0,0,109,113,5,112,0,0,110,111,5,101,0,0,111,113,5,120,0,0,112,
        93,1,0,0,0,112,101,1,0,0,0,112,107,1,0,0,0,112,110,1,0,0,0,113,14,
        1,0,0,0,114,115,5,115,0,0,115,116,5,117,0,0,116,117,5,98,0,0,117,
        118,5,105,0,0,118,119,5,114,0,0,119,120,5,86,0,0,120,121,5,111,0,
        0,121,122,5,108,0,0,122,16,1,0,0,0,123,124,5,99,0,0,124,125,5,111,
        0,0,125,126,5,109,0,0,126,130,5,111,0,0,127,128,5,97,0,0,128,130,
        5,115,0,0,129,123,1,0,0,0,129,127,1,0,0,0,130,18,1,0,0,0,131,132,
        5,100,0,0,132,133,5,105,0,0,133,134,5,118,0,0,134,135,5,105,0,0,
        135,136,5,100,0,0,136,137,5,105,0,0,137,147,5,114,0,0,138,139,5,
        115,0,0,139,140,5,112,0,0,140,141,5,108,0,0,141,142,5,105,0,0,142,
        147,5,116,0,0,143,144,5,100,0,0,144,145,5,105,0,0,145,147,5,118,
        0,0,146,131,1,0,0,0,146,138,1,0,0,0,146,143,1,0,0,0,147,20,1,0,0,
        0,148,149,5,99,0,0,149,150,5,111,0,0,150,151,5,109,0,0,151,152,5,
        98,0,0,152,153,5,105,0,0,153,154,5,110,0,0,154,155,5,97,0,0,155,
        164,5,114,0,0,156,157,5,109,0,0,157,158,5,105,0,0,158,164,5,120,
        0,0,159,160,5,99,0,0,160,161,5,111,0,0,161,162,5,109,0,0,162,164,
        5,98,0,0,163,148,1,0,0,0,163,156,1,0,0,0,163,159,1,0,0,0,164,22,
        1,0,0,0,165,166,5,115,0,0,166,167,5,105,0,0,167,168,5,108,0,0,168,
        169,5,101,0,0,169,170,5,110,0,0,170,171,5,99,0,0,171,172,5,105,0,
        0,172,173,5,97,0,0,173,182,5,114,0,0,174,175,5,109,0,0,175,176,5,
        117,0,0,176,177,5,116,0,0,177,182,5,101,0,0,178,179,5,115,0,0,179,
        180,5,105,0,0,180,182,5,108,0,0,181,165,1,0,0,0,181,174,1,0,0,0,
        181,178,1,0,0,0,182,24,1,0,0,0,183,184,5,115,0,0,184,188,5,105,0,
        0,185,186,5,105,0,0,186,188,5,102,0,0,187,183,1,0,0,0,187,185,1,
        0,0,0,188,26,1,0,0,0,189,190,5,101,0,0,190,191,5,110,0,0,191,192,
        5,116,0,0,192,193,5,111,0,0,193,194,5,110,0,0,194,195,5,99,0,0,195,
        196,5,101,0,0,196,202,5,115,0,0,197,198,5,116,0,0,198,199,5,104,
        0,0,199,200,5,101,0,0,200,202,5,110,0,0,201,189,1,0,0,0,201,197,
        1,0,0,0,202,28,1,0,0,0,203,204,5,115,0,0,204,205,5,105,0,0,205,206,
        5,110,0,0,206,212,5,111,0,0,207,208,5,101,0,0,208,209,5,108,0,0,
        209,210,5,115,0,0,210,212,5,101,0,0,211,203,1,0,0,0,211,207,1,0,
        0,0,212,30,1,0,0,0,213,223,7,0,0,0,214,215,5,62,0,0,215,223,5,61,
        0,0,216,217,5,60,0,0,217,223,5,61,0,0,218,219,5,61,0,0,219,223,5,
        61,0,0,220,221,5,33,0,0,221,223,5,61,0,0,222,213,1,0,0,0,222,214,
        1,0,0,0,222,216,1,0,0,0,222,218,1,0,0,0,222,220,1,0,0,0,223,32,1,
        0,0,0,224,225,5,100,0,0,225,226,5,117,0,0,226,227,5,114,0,0,227,
        228,5,97,0,0,228,229,5,99,0,0,229,230,5,105,0,0,230,231,5,243,0,
        0,231,256,5,110,0,0,232,233,5,100,0,0,233,234,5,117,0,0,234,235,
        5,114,0,0,235,236,5,97,0,0,236,237,5,99,0,0,237,238,5,105,0,0,238,
        239,5,111,0,0,239,256,5,110,0,0,240,241,5,100,0,0,241,242,5,117,
        0,0,242,256,5,114,0,0,243,256,5,100,0,0,244,245,5,118,0,0,245,246,
        5,111,0,0,246,247,5,108,0,0,247,248,5,117,0,0,248,249,5,109,0,0,
        249,250,5,101,0,0,250,256,5,110,0,0,251,252,5,118,0,0,252,253,5,
        111,0,0,253,256,5,108,0,0,254,256,5,118,0,0,255,224,1,0,0,0,255,
        232,1,0,0,0,255,240,1,0,0,0,255,243,1,0,0,0,255,244,1,0,0,0,255,
        251,1,0,0,0,255,254,1,0,0,0,256,34,1,0,0,0,257,259,5,45,0,0,258,
        257,1,0,0,0,258,259,1,0,0,0,259,261,1,0,0,0,260,262,7,1,0,0,261,
        260,1,0,0,0,262,263,1,0,0,0,263,261,1,0,0,0,263,264,1,0,0,0,264,
        273,1,0,0,0,265,266,5,100,0,0,266,274,5,66,0,0,267,268,5,100,0,0,
        268,274,5,98,0,0,269,270,5,68,0,0,270,274,5,66,0,0,271,272,5,68,
        0,0,272,274,5,98,0,0,273,265,1,0,0,0,273,267,1,0,0,0,273,269,1,0,
        0,0,273,271,1,0,0,0,274,36,1,0,0,0,275,277,7,2,0,0,276,275,1,0,0,
        0,277,278,1,0,0,0,278,276,1,0,0,0,278,279,1,0,0,0,279,280,1,0,0,
        0,280,281,5,46,0,0,281,282,5,109,0,0,282,283,5,112,0,0,283,284,5,
        51,0,0,284,38,1,0,0,0,285,287,7,2,0,0,286,285,1,0,0,0,287,288,1,
        0,0,0,288,286,1,0,0,0,288,289,1,0,0,0,289,40,1,0,0,0,290,292,7,2,
        0,0,291,290,1,0,0,0,292,293,1,0,0,0,293,291,1,0,0,0,293,294,1,0,
        0,0,294,295,1,0,0,0,295,297,5,47,0,0,296,291,1,0,0,0,297,298,1,0,
        0,0,298,296,1,0,0,0,298,299,1,0,0,0,299,42,1,0,0,0,300,302,7,1,0,
        0,301,300,1,0,0,0,302,303,1,0,0,0,303,301,1,0,0,0,303,304,1,0,0,
        0,304,305,1,0,0,0,305,307,5,58,0,0,306,308,7,1,0,0,307,306,1,0,0,
        0,308,309,1,0,0,0,309,307,1,0,0,0,309,310,1,0,0,0,310,317,1,0,0,
        0,311,313,5,58,0,0,312,314,7,1,0,0,313,312,1,0,0,0,314,315,1,0,0,
        0,315,313,1,0,0,0,315,316,1,0,0,0,316,318,1,0,0,0,317,311,1,0,0,
        0,317,318,1,0,0,0,318,44,1,0,0,0,319,321,7,3,0,0,320,319,1,0,0,0,
        321,322,1,0,0,0,322,320,1,0,0,0,322,323,1,0,0,0,323,324,1,0,0,0,
        324,325,6,22,0,0,325,46,1,0,0,0,25,0,73,91,112,129,146,163,181,187,
        201,211,222,255,258,263,273,278,288,293,298,303,309,315,317,322,
        1,6,0,0
    ]

class musicologoLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    COMANDO_CARGAR = 5
    COMANDO_RECORTAR = 6
    COMANDO_EXPORTAR = 7
    COMANDO_INCREMENTAR_VOL = 8
    COMANDO_ASIGNAR = 9
    COMANDO_DIVIDIR = 10
    COMANDO_COMBINAR = 11
    COMANDO_SILENCIAR = 12
    CONDICIONAL = 13
    HACER = 14
    ELSE = 15
    OPERADOR = 16
    CARACTERISTICA = 17
    VOLUMEN = 18
    ARCHIVO_MP3 = 19
    ID = 20
    RUTA = 21
    TIEMPO = 22
    WS = 23

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "' '", "'{'", "' && '", "'}'", "'subirVol'" ]

    symbolicNames = [ "<INVALID>",
            "COMANDO_CARGAR", "COMANDO_RECORTAR", "COMANDO_EXPORTAR", "COMANDO_INCREMENTAR_VOL", 
            "COMANDO_ASIGNAR", "COMANDO_DIVIDIR", "COMANDO_COMBINAR", "COMANDO_SILENCIAR", 
            "CONDICIONAL", "HACER", "ELSE", "OPERADOR", "CARACTERISTICA", 
            "VOLUMEN", "ARCHIVO_MP3", "ID", "RUTA", "TIEMPO", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "COMANDO_CARGAR", "COMANDO_RECORTAR", 
                  "COMANDO_EXPORTAR", "COMANDO_INCREMENTAR_VOL", "COMANDO_ASIGNAR", 
                  "COMANDO_DIVIDIR", "COMANDO_COMBINAR", "COMANDO_SILENCIAR", 
                  "CONDICIONAL", "HACER", "ELSE", "OPERADOR", "CARACTERISTICA", 
                  "VOLUMEN", "ARCHIVO_MP3", "ID", "RUTA", "TIEMPO", "WS" ]

    grammarFileName = "musicologo.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


